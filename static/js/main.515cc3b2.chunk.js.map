{"version":3,"sources":["components/layouts/Header.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","smoothScroll","ref","current","scrollIntoView","behavior","classes","this","className","root","AppBar","position","appBar","Toolbar","grow","Button","color","onClick","projectrefs","IconButton","href","socialIcons","icon","Component","withStyles","theme","flexGrow","background","margin","MainPage","projectsRef","React","createRef","container","content","mainContainer","appBarSpacer","Grid","item","xs","banner","bannerHeader","bannerDivider","bannerText","projContainer","projHeader","Divider","projPara","md","sm","projOneGrid","ButtonBase","projOneButton","projTitle","projOne","projTwoGrid","projTwoButton","projTwo","projThreeGrid","projThreeButton","projThree","projFourGrid","projFourButton","projFour","footer","footerCopyRight","width","mixins","toolbar","selfImage","borderRadius","display","textAlign","backgroundColor","opacity","fontSize","fontWeight","border","borderTop","height","padding","breakpoints","down","left","right","top","bottom","backgroundSize","backgroundPosition","float","library","add","fab","faCommentAlt","faCopyright","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.515cc3b2.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst styles = theme =>({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    background: \"#3494E6\",\n    background: \"-webkit-linear-gradient(to right, #3494E6, #EC6EAD)\",\n    background: \"linear-gradient(to right, #3494E6, #EC6EAD)\"\n  },\n  grow: {\n    flexGrow: 1,\n    margin: \"auto\"\n  }\n});\n\nclass Header extends Component{\n  constructor(props){\n    super(props);\n\n    this.smoothScroll = ref => {\n      ref.current.scrollIntoView({behavior: \"smooth\"})\n    }\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" className= {classes.appBar}>\n          <Toolbar>\n          <div className={classes.grow}>\n            <Button color=\"inherit\" onClick={() => {this.smoothScroll(this.props.projectrefs)}}>Projects</Button>\n            <Button color=\"inherit\">Resume</Button>\n          </div>    \n            <IconButton href=\"https://github.com/jasoncorneliog\" color=\"inherit\" className={classes.socialIcons}>\n              <FontAwesomeIcon icon={['fab', 'github']} />\n            </IconButton>\n            <IconButton href=\"https://www.linkedin.com/in/jasoncorneliog\" color=\"inherit\" className={classes.socialIcons}>\n              <FontAwesomeIcon icon={['fab', 'linkedin']} />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Header);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Header from './layouts/Header';\n\nconst styles = theme => ({\n  content: {\n    width: \"100%\",\n    margin: \"auto\",\n  },\n  mainContainer: {\n    background: \"-webkit-linear-gradient(to right, #3494E6, #EC6EAD)\",\n    background: \"linear-gradient(to right, #3494E6, #EC6EAD)\"\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  selfImage: {\n    borderRadius: \"50%\",\n    display: \"block\",\n    margin: \"0 auto\"\n  },\n  banner: {\n    textAlign:\"center\",\n    backgroundColor: \"black\",\n    opacity: .7,\n    width: \"75%\",\n    margin: \"auto\",\n    borderRadius: \"10px\"\n  },\n  bannerHeader: {\n    fontSize: \"66px\",\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  bannerDivider: {\n    border: \"none\",\n    borderTop: \"5px dotted white\",\n    width: \"50%\",\n    height: \"1px\",\n    margin: \"auto\"\n  },\n  bannerText: {\n    color: \"white\",\n    fontSize: \"30px\",\n    padding: \"1em\"\n  },\n  projContainer: {\n    width: \"50%\",\n    margin: \"auto\",\n    color: \"#444444\",\n    [theme.breakpoints.down('lg')]:{\n      width: \"80%\"\n    },\n    [theme.breakpoints.down('sm')]:{\n      width: \"90%\"\n    },\n  },\n  projPara: {\n    fontSize: \"25px\",\n  },\n  projOneGrid: {\n    height:\"250px\",\n    opacity: .85\n  },\n  projTwoGrid: {\n    height: \"250px\",\n    opacity: .85\n  },\n  projThreeGrid: {\n    height: \"250px\",\n    opacity: .85\n  },\n  projFourGrid: {  \n    height: \"250px\",\n    opacity: .85\n  },\n  projOneButton: {\n    width: \"100%\",\n    height: \"100%\",\n    \"&:hover, $projOne\": {\n      opacity: .9\n    }\n  },\n  projTwoButton: {\n    width: \"100%\",\n    height: \"100%\",\n    \"&:hover, $projTwo\": {\n      opacity: .9\n    }\n  },\n  projThreeButton: {\n    width: \"100%\",\n    height: \"100%\",\n    \"&:hover, $projThree\": {\n      opacity: .9\n    }\n  },\n  projFourButton: {\n    width: \"100%\",\n    height: \"100%\",\n    \"&:hover, $projFour\": {\n      opacity: .9\n    }\n  },\n  projOne: {\n    background: \"#833ab4\",\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%',\n    opacity: .75\n  },\n  projTwo: {\n    backgroundColor: \"#fcb045\",\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%',\n    opacity: .75\n  },\n  projThree: {\n    backgroundColor: \"#fd1d1d\",\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%',\n    opacity: .75\n  },\n  projFour: {\n    backgroundColor: \"#518EDD\",\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center 40%',\n    opacity: .75\n  },\n  projTitle: {\n    fontSize: \"45px\",\n  },\n  footer: {\n    margin: \"auto\",\n    width: \"80%\",\n    color: \"#444444\",\n  },\n  footerCopyRight: {\n    float: \"right\"\n  },\n});\n\nclass MainPage extends Component {\n  constructor(props){\n    super(props);\n    this.projectsRef = React.createRef();\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.container}>\n        <Header projectrefs={this.projectsRef}/>\n        <main className={classes.content}>\n          <div className={classes.mainContainer}>\n            <div className={classes.appBarSpacer} />\n            <Grid container>\n              <Grid item xs={12}>\n                {/* <img src={ SelfImage }\n                  alt=\"SelfImage\"\n                  className={classes.selfImage}\n                /> */}\n                <div className={classes.banner}>\n                  <h1 className={classes.bannerHeader}>Hi, I'm Jason</h1>\n                  <hr className={classes.bannerDivider} />\n                  <p className={classes.bannerText}>A Student & Developer studying Software Engineering at CMU.</p>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n          <div className={classes.projContainer} ref={this.projectsRef}>\n            <Grid container>\n              <Grid item xs={12}>\n                <h1 className={classes.projHeader}>My Projects.</h1>\n                <Divider />\n                <p className={classes.projPara}>Here are some of the stuff I've been working on!</p>\n              </Grid>     \n              <Grid item md={8} sm = {12} xs={12} className={classes.projOneGrid}>\n                <ButtonBase className={classes.projOneButton}>\n                  <h2 className={classes.projTitle}><FontAwesomeIcon icon=\"comment-alt\"></FontAwesomeIcon> Toons</h2>\n                  <span className={classes.projOne}></span>\n                </ButtonBase>\n              </Grid>\n              <Grid item md={4} sm = {12} xs={12} className={classes.projTwoGrid}>\n                <ButtonBase className={classes.projTwoButton}>\n                  <h2 className={classes.projTitle}>ABC</h2>\n                  <span className={classes.projTwo}></span>\n                </ButtonBase>\n              </Grid>\n              <Grid item md={4} sm = {12} xs={12} className={classes.projThreeGrid}>\n                <ButtonBase className={classes.projThreeButton}>\n                  <span className={classes.projThree}></span>\n                </ButtonBase>\n              </Grid>\n              <Grid item md={8} sm = {12} xs={12} className={classes.projFourGrid}>\n                <ButtonBase className={classes.projFourButton}>\n                  <span className={classes.projFour}></span>\n                </ButtonBase>\n              </Grid>   \n            </Grid>\n          </div>\n          <div className={classes.appBarSpacer} />\n          <div className={classes.footer}>\n            <Divider />\n            <p className={classes.footerCopyRight}><FontAwesomeIcon icon=\"copyright\"></FontAwesomeIcon> Jason Cornelio</p>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nMainPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MainPage);","// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faCommentAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faCopyright} from '@fortawesome/free-solid-svg-icons';\n\nimport MainPage from './components/MainPage';\n\nlibrary.add(fab, faCommentAlt, faCopyright);\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n            <Route exact path = '/portfolio' component={ MainPage } />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}